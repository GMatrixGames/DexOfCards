@page "/set/{setId}/{lang}"
@using DexOfCards.Framework.Data
@using DexOfCards.Framework.Data.Models

@if (DataStorage.GetSet(SetId, Enum.Parse<CardLanguage>(Lang)) is { } CardSet)
{
    <div class="container">
        <div class="row justify-content-center">
            <div style="max-width: 50%">
                <div style="text-align: center; margin: 1em 0 1em 0">
                    <div class="card" style="background-color: #36373a">
                        <div class="card-body">
                            <div>
                                <img src="@CardSet.Logo" alt/>
                                <p style="font-size: 1.5em">
                                    <img style="display: inline" src="@CardSet.SetImage" width="@(CardSet.IsAsia ? "40" : "30")" alt>
                                    @CardSet.SetName
                                </p>
                                <p style="font-size: 1.2em">
                                    @CardSet.CardsInSet cards in the set
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <main style="margin-bottom: 2em">
        <div class="container center">
            <div class="mt-3">
                <div>
                    <div class="row gy-3">
                        @foreach (var card in DataStorage.GetCards(CardSet))
                        {
                            <div class="col-6 col-sm-4 col-md-3 col-lg-2 corner-radial text-center">
                                <div class="pokemon-card shadow-sm">
                                    <div style="position: relative">
                                        <div style="cursor: pointer">
                                            <a @onclick="() => OnClick(card)" class="hover">
                                                <img class="img-fluid card corner-radial" src="@card.CardImage" alt/>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </main>

    <Modal @ref="_modal" Animated="true" AnimationDuration="150" RenderMode="ModalRenderMode.LazyLoad">
        <ModalContent Size="ModalSize.ExtraLarge" Centered>
            <ModalHeader>
                <ModalTitle>Card Information</ModalTitle>
                <CloseButton Style="margin-right: 1em"/>
            </ModalHeader>
            <ModalBody>
                <ModalBody>
                    <div class="container-fluid">
                        <div class="row d-flex align-items-center justify-content-center">
                            <div class="col-5 pokemon-card-large">
                                <div class="text-center">
                                    <img src="@_clickedCard.CardImage" class="img-fluid corner-radial" alt/>
                                </div>
                            </div>
                            <div class="col-7">
                                <div class="card">
                                    <div class="card-body p-0 p-md-3">
                                        <Table TextColor="TextColor.White">
                                            <TableBody>
                                                <TableRow>
                                                    <TableRowHeader>Name</TableRowHeader>
                                                    <TableRowCell>@_clickedCard.CardName</TableRowCell>
                                                </TableRow>
                                                <TableRow>
                                                    <TableRowHeader>Card Number</TableRowHeader>
                                                    <TableRowCell>@(!CardSet.CardsInSet.Contains('?') && int.TryParse(_clickedCard.CardNumber.Replace("a", ""), out _) ? $"{_clickedCard.CardNumber}/{CardSet.CardsInSet}" : _clickedCard.CardNumber)</TableRowCell>
                                                </TableRow>
                                                <TableRow>
                                                    <TableRowHeader>Set</TableRowHeader>
                                                    <TableRowCell>
                                                        <img src="@CardSet.SetImage" width="@(CardSet.IsAsia ? "30" : "20")" alt> @CardSet.SetName
                                                    </TableRowCell>
                                                </TableRow>
                                            </TableBody>
                                        </Table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row mt-5 justify-content-center">
                            <div class="col-md-6">
                                <div class="card" style="background-color: #36373a">
                                    <h6 class="card-header">
                                        Card Collection
                                    </h6>
                                    <div class="card-body">
                                        <form>
                                            <div style="width: 49%; display: inline-block; vertical-align: top; float: left">
                                                <div class="form-group">
                                                    <label for="number">Amount</label>
                                                    <input type="number" class="form-control" id="number" placeholder="0" autocomplete="off" @bind="_cardAmount"/>
                                                </div>
                                            </div>
                                            <div style="width: 49%; display: inline-block; vertical-align: top; float: right">
                                                <label for="style">Variant</label>
                                                <Select TValue="string" id="style" @bind-SelectedValue="_cardStyle">
                                                    @foreach (var style in _clickedCard.Styles)
                                                    {
                                                        <SelectItem Value="@style">@style</SelectItem>
                                                    }
                                                </Select>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </ModalBody>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@Save">Save</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}

@code {
    private CardModel _clickedCard { get; set; }
    private Modal _modal { get; set; }
    [Parameter] public string SetId { get; set; }
    [Parameter] public string Lang { get; set; }

    private int _cardAmount { get; set; }
    private string _cardStyle { get; set; }

    private void OnClick(CardModel model)
    {
        _clickedCard = model;

        _modal.Show();
    }

    private void Save()
    {
        _modal.Hide();
    }
}