@page "/set/{setId}"
@using DexOfCards.Framework.Data
@using DexOfCards.Framework.Data.Models

@if (DataStorage.GetSet(SetId) is { } CardSet)
{
    <div style="text-align: center; margin: 5em 0 1em 0">
        <img src="@CardSet.Logo" alt/>
    </div>

    <main style="margin-bottom: 2em">
        <div class="container center">
            <div class="mt-3">
                <div>
                    <div class="row gy-3">
                        @foreach (var card in DataStorage.GetCards(CardSet))
                        {
                            <div class="col-6 col-sm-4 col-md-3 col-lg-2 corner-radial text-center">
                                <div class="pokemon-card shadow-sm">
                                    <div style="position: relative">
                                        <a @onclick="() => OnClick(card)" style="cursor: pointer" class="hover">
                                            <img class="img-fluid card corner-radial" src="@card.CardImage" alt/>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </main>

    <Modal @ref="_modal" Animated="true" AnimationDuration="150" RenderMode="ModalRenderMode.LazyLoad">
        <ModalContent Size="ModalSize.ExtraLarge" Centered>
            <ModalHeader>
                <ModalTitle>Card Information</ModalTitle>
                <CloseButton Style="margin-right: 1em"/>
            </ModalHeader>
            <ModalBody>
                <ModalBody>
                    <div class="container-fluid">
                        <div class="row d-flex align-items-center justify-content-center">
                            <div class="col-5 pokemon-card-large">
                                <div class="text-center">
                                    @* <div class="slideshow-container"> *@
                                    @*     @foreach (var (name, image) in _clickedCard.Styles) *@
                                    @*     { *@
                                    @*         <div class="slide fade"> *@
                                    @*             <img src="@image" class="img-fluid corner-radial" alt="@name"> *@
                                    @*             <div class="text">@name</div> *@
                                    @*         </div> *@
                                    @*     } *@
                                    @* </div> *@
                                    @* *@
                                    @* <div> *@
                                    @*     <a class="prev" onclick="plusSlides(-1)">&#10094;</a> *@
                                    @*     <a class="next" onclick="plusSlides(1)">&#10095;</a> *@
                                    @* </div> *@

                                    <img src="@_clickedCard.CardImage" class="img-fluid corner-radial" alt/>
                                </div>
                            </div>
                            <div class="col-7">
                                <div class="card">
                                    <div class="card-body p-0 p-md-3">
                                        <Table TextColor="TextColor.White">
                                            <TableBody>
                                                <TableRow>
                                                    <TableRowHeader>Name</TableRowHeader>
                                                    <TableRowCell>@_clickedCard.CardName</TableRowCell>
                                                </TableRow>
                                                <TableRow>
                                                    <TableRowHeader>Card Number</TableRowHeader>
                                                    <TableRowCell>@(!CardSet.CardsInSet.Contains('?') && int.TryParse(_clickedCard.CardNumber, out _) ? $"{_clickedCard.CardNumber}/{CardSet.CardsInSet}" : _clickedCard.CardNumber)</TableRowCell>
                                                </TableRow>
                                                <TableRow>
                                                    <TableRowHeader>Set</TableRowHeader>
                                                    <TableRowCell>
                                                        <img src="@CardSet.SetImage" width="@(CardSet.IsAsia ? "30" : "20")" alt> @CardSet.SetName
                                                    </TableRowCell>
                                                </TableRow>
                                            </TableBody>
                                        </Table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </ModalBody>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@Save">Save</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>
}

@code {
    private CardModel _clickedCard { get; set; }
    private Modal _modal { get; set; }
    [Parameter] public string SetId { get; set; }

    private void OnClick(CardModel model)
    {
        _clickedCard = model;

        _modal.Show();
    }

    private void Save()
    {
        _modal.Hide();
    }
}